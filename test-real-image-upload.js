import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';
import fs from 'fs';
import path from 'path';

dotenv.config();

const supabase = createClient(
  process.env.VITE_SUPABASE_URL,
  process.env.VITE_SUPABASE_ANON_KEY
);

async function testRealImageUpload() {
  console.log('üì∏ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏£‡∏¥‡∏á (‡∏£‡∏π‡∏õ‡πÅ‡∏°‡∏ß)...\n');
  
  try {
    // 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏´‡∏≤‡∏¢‡∏Å‡πà‡∏≠‡∏ô
    console.log('üìù ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏´‡∏≤‡∏¢...');
    
    const testPetData = {
      pet_type: 'cat',
      pet_name: '‡πÅ‡∏°‡∏ß‡∏™‡πâ‡∏°‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      breed: '‡πÅ‡∏°‡∏ß‡πÑ‡∏ó‡∏¢',
      colors: '‡∏™‡πâ‡∏°, ‡∏Ç‡∏≤‡∏ß',
      date_of_birth: '2020-01-01',
      lost_date: '2025-08-10',
      location: '‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      province: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      contact_name: '‡∏ú‡∏π‡πâ‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      contact_phone: '0123456789',
      contact_email: 'test@example.com',
      details: '‡πÅ‡∏°‡∏ß‡∏™‡πâ‡∏°‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏ö‡∏ö',
      status: 'active'
    };
    
    const { data: lostPet, error: petError } = await supabase
      .from('lost_pets')
      .insert(testPetData)
      .select()
      .single();
    
    if (petError) {
      console.error('‚ùå ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:', petError.message);
      return;
    }
    
    console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ID:', lostPet.id);
    
    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á (base64 ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡πÅ‡∏°‡∏ß‡∏™‡πâ‡∏°)
    console.log('\nüì∑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û...');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á mock image data (‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏î‡πâ)
    // ‡πÉ‡∏ä‡πâ base64 ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ 1x1 pixel ‡πÅ‡∏ï‡πà‡∏à‡∏≥‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏°‡∏ß
    const orangeCatImageData = Buffer.from(
      '/9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAABAAEDASIAAhEBAxEB/8QAFQABAQAAAAAAAAAAAAAAAAAAAAv/xAAUEAEAAAAAAAAAAAAAAAAAAAAA/8QAFQEBAQAAAAAAAAAAAAAAAAAAAAX/xAAUEQEAAAAAAAAAAAAAAAAAAAAA/9oADAMBAAIRAxEAPwCdABmX/9k=',
      'base64'
    );
    
    const fileName = `orange-cat-${Date.now()}.jpg`;
    const filePath = `public/${lostPet.id}/${fileName}`;
    
    console.log(`üìÅ ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå: ${fileName}`);
    console.log(`üìç Path: ${filePath}`);
    
    // 3. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡πÑ‡∏õ‡∏¢‡∏±‡∏á Storage
    console.log('\n‚¨ÜÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û...');
    
    const { data: uploadData, error: uploadError } = await supabase.storage
      .from('lost-pet-images')
      .upload(filePath, orangeCatImageData, {
        contentType: 'image/jpeg',
        cacheControl: '3600',
        upsert: false
      });
    
    if (uploadError) {
      console.error('‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', uploadError.message);
      
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
      await supabase.from('lost_pets').delete().eq('id', lostPet.id);
      return;
    }
    
    console.log('‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', uploadData.path);
    
    // 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Public URL
    const { data: urlData } = supabase.storage
      .from('lost-pet-images')
      .getPublicUrl(filePath);
    
    console.log('üîó Public URL:', urlData.publicUrl);
    
    // 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    console.log('\nüíæ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
    
    const { data: imageRecord, error: imageError } = await supabase
      .from('lost_pet_images')
      .insert({
        lost_pet_id: lostPet.id,
        image_url: urlData.publicUrl
      })
      .select()
      .single();
    
    if (imageError) {
      console.error('‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', imageError.message);
    } else {
      console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ID:', imageRecord.id);
    }
    
    // 6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå:');
    
    // ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Storage
    const { data: storageFiles, error: listError } = await supabase.storage
      .from('lost-pet-images')
      .list(`public/${lostPet.id}`, { limit: 10 });
    
    if (listError) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Storage:', listError.message);
    } else {
      console.log(`üìÅ ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Storage: ${storageFiles.length} ‡πÑ‡∏ü‡∏•‡πå`);
      storageFiles.forEach(file => {
        console.log(`   - ${file.name} (${file.metadata?.size || 'unknown'} bytes)`);
      });
    }
    
    // ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    const { data: dbImages, error: dbError } = await supabase
      .from('lost_pet_images')
      .select('*')
      .eq('lost_pet_id', lostPet.id);
    
    if (dbError) {
      console.log('‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:', dbError.message);
    } else {
      console.log(`üíæ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${dbImages.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`);
      dbImages.forEach(img => {
        console.log(`   - ID: ${img.id}, URL: ${img.image_url}`);
      });
    }
    
    // 7. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL ‡∏ß‡πà‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    console.log('\nüåê ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á URL...');
    try {
      const response = await fetch(urlData.publicUrl);
      if (response.ok) {
        console.log('‚úÖ URL ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ:', response.status, response.statusText);
      } else {
        console.log('‚ùå URL ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ:', response.status, response.statusText);
      }
    } catch (fetchError) {
      console.log('‚ùå Error checking URL:', fetchError.message);
    }
    
    console.log('\nüéâ ‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!');
    console.log(`üìä ‡∏™‡∏£‡∏∏‡∏õ:
    - ‡∏™‡∏±‡∏ï‡∏ß‡πå‡∏´‡∏≤‡∏¢ ID: ${lostPet.id}
    - ‡∏†‡∏≤‡∏û‡πÉ‡∏ô Storage: ‚úÖ
    - ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‚úÖ
    - Public URL: ${urlData.publicUrl}
    `);
    
    // 8. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
    console.log('\nüßπ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö...');
    
    const shouldCleanup = true; // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô false ‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    
    if (shouldCleanup) {
      // ‡∏•‡∏ö‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å Storage
      await supabase.storage.from('lost-pet-images').remove([filePath]);
      
      // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
      await supabase.from('lost_pet_images').delete().eq('lost_pet_id', lostPet.id);
      await supabase.from('lost_pets').delete().eq('id', lostPet.id);
      
      console.log('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß');
    } else {
      console.log('üíæ ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏ß‡πâ');
    }
    
  } catch (err) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err.message);
  }
}

// ‡∏£‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö
testRealImageUpload();
