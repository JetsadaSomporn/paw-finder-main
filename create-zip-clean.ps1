# ‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á ZIP ‡πÑ‡∏ü‡∏•‡πå‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ
# ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: 10 ‡∏™‡∏¥‡∏á‡∏´‡∏≤‡∏Ñ‡∏° 2568

$OutputName = "paw-finder-project"
$ProjectPath = Get-Location

$ParentPath = Split-Path $ProjectPath -Parent
$ZipPath = Join-Path $ParentPath "$OutputName.zip"

Write-Host "üìÇ Project Path: $ProjectPath" -ForegroundColor Blue
Write-Host "üì¶ Zip Path: $ZipPath" -ForegroundColor Blue

# ‡∏•‡∏ö zip ‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
if (Test-Path $ZipPath) {
    Remove-Item $ZipPath -Force
    Write-Host "üóëÔ∏è ‡∏•‡∏ö zip ‡πÄ‡∏Å‡πà‡∏≤‡πÅ‡∏•‡πâ‡∏ß" -ForegroundColor Yellow
}

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå/‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏ß‡∏°
$IncludeItems = @(
    "src",
    "public", 
    "supabase",
    "package.json",
    "package-lock.json",
    ".env",
    "*.config.js",
    "*.config.ts", 
    "*.json",
    "index.html",
    ".gitignore",
    "README.md"
)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå temp
$TempPath = Join-Path $env:TEMP "paw-finder-temp"
if (Test-Path $TempPath) {
    Remove-Item $TempPath -Recurse -Force
}
New-Item -ItemType Directory -Path $TempPath | Out-Null

Write-Host "üìã ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô..." -ForegroundColor Yellow

# ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
foreach ($Item in $IncludeItems) {
    $SourcePath = Join-Path $ProjectPath $Item
    
    if ($Item.Contains("*")) {
        # Handle wildcard patterns
        Get-ChildItem $SourcePath -ErrorAction SilentlyContinue | ForEach-Object {
            $DestPath = Join-Path $TempPath $_.Name
            Copy-Item $_.FullName $DestPath -Force
            Write-Host "  ‚úÖ $($_.Name)" -ForegroundColor Green
        }
    } elseif (Test-Path $SourcePath) {
        $DestPath = Join-Path $TempPath $Item
        if (Test-Path $SourcePath -PathType Container) {
            Copy-Item $SourcePath $DestPath -Recurse -Force
        } else {
            Copy-Item $SourcePath $DestPath -Force
        }
        Write-Host "  ‚úÖ $Item" -ForegroundColor Green
    } else {
        Write-Host "  ‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö: $Item" -ForegroundColor Yellow
    }
}

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå deno.d.ts (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
$DenoTypesPath = "supabase\functions\create-storage\deno.d.ts"
$SourceDenoTypes = Join-Path $ProjectPath $DenoTypesPath
if (Test-Path $SourceDenoTypes) {
    $DestDenoTypesDir = Join-Path $TempPath "supabase\functions\create-storage"
    if (!(Test-Path $DestDenoTypesDir)) {
        New-Item -ItemType Directory -Path $DestDenoTypesDir -Force | Out-Null
    }
    $DestDenoTypes = Join-Path $DestDenoTypesDir "deno.d.ts"
    Copy-Item $SourceDenoTypes $DestDenoTypes -Force
    Write-Host "  ‚úÖ deno.d.ts (Deno type definitions)" -ForegroundColor Green
}

# ‡∏™‡∏£‡πâ‡∏≤‡∏á zip
Write-Host "üì¶ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á zip file..." -ForegroundColor Yellow
Compress-Archive -Path "$TempPath\*" -DestinationPath $ZipPath -Force

# ‡∏•‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå temp
Remove-Item $TempPath -Recurse -Force

# ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
$ZipSize = (Get-Item $ZipPath).Length
$SizeMB = [math]::Round($ZipSize / 1MB, 2)

Write-Host "`nüéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á zip ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!" -ForegroundColor Green
Write-Host "üì¶ ‡πÑ‡∏ü‡∏•‡πå: $ZipPath" -ForegroundColor Cyan
Write-Host "üìè ‡∏Ç‡∏ô‡∏≤‡∏î: $SizeMB MB" -ForegroundColor Cyan

Write-Host "`nüí° ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô zip ‡∏ô‡∏µ‡πâ:" -ForegroundColor Yellow
Write-Host "  1. ‡πÅ‡∏ï‡∏Å zip" -ForegroundColor White
Write-Host "  2. cd paw-finder-main" -ForegroundColor White  
Write-Host "  3. npm install" -ForegroundColor White
Write-Host "  4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ .env ‡∏î‡πâ‡∏ß‡∏¢ Supabase credentials" -ForegroundColor White
Write-Host "  5. npm run dev" -ForegroundColor White

Write-Host "`nüìã ‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏£‡∏ß‡∏°‡πÑ‡∏ß‡πâ:" -ForegroundColor Cyan
Write-Host "  ‚úÖ deno.d.ts - Type definitions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Edge Functions" -ForegroundColor Green
Write-Host "  ‚úÖ .env - ‡πÑ‡∏ü‡∏•‡πå environment variables" -ForegroundColor Green
Write-Host "  ‚úÖ supabase/ - Migration files ‡πÅ‡∏•‡∏∞ Edge Functions" -ForegroundColor Green
